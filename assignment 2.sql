CREATE TABLE T_ACTIVITY (
    ACTIVITY_ID int NOT NULL IDENTITY(1,1),
    ACTIVITY_DESCRIPTION varchar(255) NOT NULL,
    PRIMARY KEY (ACTIVITY_ID)
);

CREATE TABLE T_EMP (
 EMP_ID INT NOT NULL IDENTITY(1001,2), 
 EMP_CODE VARCHAR(255),
 EMP_F_NAME VARCHAR(255) NOT NULL,
 EMP_M_NAME VARCHAR(255),
 EMP_L_NAME VARCHAR(255),
 EMP_DOB DATE,
 EMP_DOJ DATE,
 PRIMARY KEY(EMP_ID),
 CHECK(DATEDIFF(hour,EMP_DOB,GETDATE())/8766> 18)
);

CREATE TABLE T_ATTEN_DET (
			ATTEN_ID INT IDENTITY(1001,1),
			EMP_ID INT FOREIGN KEY REFERENCES T_EMP(EMP_ID),
			ACTIVITY_ID INT FOREIGN KEY REFERENCES T_ACTIVITY(ACTIVITY_ID),
			ATTEN_START_DATETIME SMALLDATETIME,
			ATTEN_END_HRS INT,
			PRIMARY KEY (ATTEN_ID )
);

CREATE TABLE T_SALARY(
			SALARY_ID INT IDENTITY(1001,1),
			EMP_ID INT FOREIGN KEY REFERENCES T_EMP(EMP_ID),
			CHANGED_DATE DATE,
			NEW_SALARY INT,
			PRIMARY KEY(SALARY_ID )
);

/*solution 1*/
SELECT  
CONCAT(EMP_F_NAME,' ',EMP_M_NAME,' ',EMP_L_NAME),
EMP_DOB
FROM  T_EMP T
WHERE T.EMP_DOB  = EOMONTH(emp_DOB)

/*solution 2*/
SELECT NAME,
       ACTIVITY_DESCRIPTION,
		CURRENT_SALARY,
		HOURS_WORKED_ON_LAST,
		TOTAL_WORK,
		PREVIOUS_SALARY,
		 CASE WHEN (PREVIOUS_SALARY - CURRENT_SALARY) < 0
THEN 'YES' ELSE 'NO' END AS Increment
FROM(
SELECT TE.EMP_F_NAME AS NAME,
       TACT.ACTIVITY_DESCRIPTION,
		B.CURRENT_SALARY,
		A.HOURS_WORKED_ON_LAST,
		C.TOTAL_WORK,
		MAX(NEW_SALARY) AS PREVIOUS_SALARY
FROM       
(SELECT  ATTEN_2.ACTIVITY_ID,
	    ATTEN_2.EMP_ID,
	    SUM(ATTEN_END_HRS) AS HOURS_WORKED_ON_LAST
FROM T_ATTEN_DET ATTEN_2
WHERE ACTIVITY_ID
IN  (
		SELECT 
			  ATTEN_1.ACTIVITY_ID
		FROM T_ATTEN_DET ATTEN_1
		WHERE ATTEN_START_DATETIME
		IN
							(
								SELECT 
									  MAX(ATTEN_START_DATETIME) AS LAST_TIME
								FROM T_ATTEN_DET
								GROUP BY EMP_ID
							)
		GROUP BY EMP_ID,ACTIVITY_ID
     )
GROUP BY EMP_ID,ACTIVITY_ID
)A
LEFT JOIN
(
		SELECT SUM(ATTEN_END_HRS) AS TOTAL_WORK,
		       EMP_ID
		FROM T_ATTEN_DET
		GROUP BY EMP_ID
)C ON A.EMP_ID=C.EMP_ID
LEFT JOIN
(
SELECT EMP_ID,
       NEW_SALARY AS CURRENT_SALARY
FROM T_SALARY
WHERE CHANGED_DATE
 IN(
		SELECT MAX(CHANGED_DATE)
		FROM T_SALARY
		GROUP BY EMP_ID
    )
)B ON A.EMP_ID=B.EMP_ID
LEFT JOIN
T_EMP TE ON TE.EMP_ID=A.EMP_ID
LEFT JOIN
T_ACTIVITY TACT ON TACT.ACTIVITY_ID=A.ACTIVITY_ID
LEFT JOIN
T_SALARY TS ON TS.EMP_ID=A.EMP_ID
GROUP BY 
       TACT.ACTIVITY_DESCRIPTION,
		B.CURRENT_SALARY,
		A.HOURS_WORKED_ON_LAST,
		C.TOTAL_WORK,TE.EMP_F_NAME)N	